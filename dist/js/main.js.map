{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["let mainSliderJQ = $('.main-slider');\r\nlet mainSlider = document.querySelector('.main-slider');\r\n\r\nmainSliderJQ.slick({\r\n    dots: true,\r\n    arrows: true,\r\n    infinite: false,\r\n    slidesToShow: 1,\r\n    fade: true,\r\n    speed: 1500,\r\n    autoplay: true,\r\n    cssEase: 'linear'\r\n});\r\n\r\nlet logo = document.querySelector('.logo');\r\nlet mainSliderSlick = mainSliderJQ.slick('getSlick');\r\nlet mainFirstSlide = mainSliderSlick?.$slides[0];\r\n\r\nlet mainArrows = document.querySelectorAll('.slick-arrow');\r\nlet mainDots = mainSlider.querySelector('.slick-dots');\r\nlet mainText = mainSlider.querySelector('.slick-active')\r\n    ?.querySelector('.texts-block');\r\n\r\nlet mobile = {\r\n    default: {\r\n        dots: '148px',\r\n        arrows: '54px',\r\n    },\r\n};\r\n\r\nlet desktop = {\r\n    default: {\r\n        dots: '250px',\r\n        arrows: '54px',\r\n    },\r\n};\r\n\r\nlet getOffsetLeft = selector => {\r\n    if (!selector)\r\n        return selector\r\n    if (selector.offsetLeft)\r\n        return selector.offsetLeft;\r\n    else if (selector && !selector.offsetLeft)\r\n        return getOffsetLeft(selector?.offsetParent);\r\n};\r\n\r\nlet getOffsetTop = selector => {\r\n    if (!selector)\r\n        return selector\r\n    if (selector.offsetTop)\r\n        return selector.offsetTop;\r\n    else if (selector && !selector.offsetTop)\r\n        return getOffsetTop(selector?.offsetParent);\r\n};\r\n\r\nlet calculateProperty = (currentProperty, newProperty) => {\r\n    if (typeof newProperty == 'string') {\r\n        currentValue = parseFloat(currentProperty);\r\n        newValue = parseFloat(newProperty.slice(2, -2));\r\n\r\n        if (['auto', 'none', 'inherit'].includes(newProperty) || /%$/g.test(newProperty)) {\r\n            return newProperty;\r\n        } else if (currentValue && newProperty.startsWith('+=')) {\r\n            return `${currentValue - newValue}px`;\r\n        } else if (currentValue && newProperty.startsWith('-=')) {\r\n            return `${currentValue - newValue}px`;\r\n        }\r\n\r\n        let result = parseFloat(newProperty) || 0;\r\n        return `${result}px`;\r\n    }\r\n};\r\n\r\nlet setCSS = (element, properties) => {\r\n    for (let property in properties) {\r\n        currentStyleValue = getComputedStyle(element)[property];\r\n        element.style[property] = `${calculateProperty(currentStyleValue, properties[property])}`;\r\n    }\r\n};\r\n\r\nfunction protoCSS(properties) {\r\n    Array.from(this).forEach(el => setCSS(el, properties));\r\n}\r\n\r\nfunction customCSS(properties) {\r\n    setCSS(this, properties);\r\n}\r\n\r\nNodeList.prototype.css = protoCSS;\r\nHTMLUListElement.prototype.css = customCSS;\r\n\r\nlet animations = document.querySelectorAll('.sanimate');\r\nanimations.forEach(el => {\r\n    let {\r\n        delay,\r\n        duration,\r\n        timing\r\n    } = el.dataset;\r\n\r\n    if (delay)\r\n        el.style.animationDelay = delay;\r\n\r\n    if (duration)\r\n        el.style.animationDuration = duration;\r\n\r\n    if (timing)\r\n        el.style.animationTimingFunction = timing;\r\n});\r\n\r\nsetTimeout(() => {\r\n    mainFirstSlide.querySelector('.hide')?.classList.remove('hide');\r\n    mainArrows.forEach(arrow => arrow.classList.add('sanimate', 'fadeInUp'));\r\n    mainDots.classList.add('sanimate', 'fadeInUp');\r\n    mainFirstSlide.querySelectorAll('.sanimate').forEach(\r\n        el => el.classList.add('fadeInUp')\r\n    );\r\n}, 400);\r\n\r\nfunction animateMainSlider(slick, remove = false) {\r\n    let animateName = 'fadeInUp';\r\n    let currentSlideIdx = slick.currentSlide;\r\n    let currentSlide = slick.$slides[currentSlideIdx];\r\n    let currentSelectors = currentSlide.querySelectorAll('.sanimate');\r\n    currentSelectors.forEach(el => !remove ? el.classList.add(animateName) : el.classList.remove(animateName));\r\n}\r\n\r\nmainSliderJQ.on('beforeChange', (event, slick, next) => animateMainSlider(slick, true));\r\nmainSliderJQ.on('afterChange', (event, slick, next) => console.log(true));\r\nmainSliderJQ.on('swipe', (event, slick, direction) => animateMainSlider(slick));\r\nmainDots.querySelectorAll('li').forEach(dot => {\r\n    dot.addEventListener('click', () => animateMainSlider(mainSliderSlick));\r\n});\r\nmainArrows.forEach(\r\n    arrow => arrow.addEventListener('click', () => animateMainSlider(mainSliderSlick))\r\n);\r\n\r\n$('.clients-slider').slick({\r\n    dots: true,\r\n    infinite: false,\r\n    speed: 300,\r\n    slidesToShow: 2,\r\n    slidesToScroll: 2,\r\n    mobileFirst: true,\r\n\r\n    responsive: [{\r\n            breakpoint: 560,\r\n            settings: {\r\n                slidesToShow: 3,\r\n                slidesToScroll: 2,\r\n                dots: true,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 760,\r\n            settings: {\r\n                slidesToShow: 4,\r\n                slidesToScroll: 2,\r\n                dots: true,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1280,\r\n            settings: \"unslick\"\r\n        }\r\n    ]\r\n});\r\n\r\n$('.news-slider').slick({\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 300,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    mobileFirst: true,\r\n    adaptiveHeight: true,\r\n    arrows: true,\r\n    responsive: [{\r\n        breakpoint: 760,\r\n        settings: {\r\n            slidesToShow: 2,\r\n            slidesToScroll: 1,\r\n            dots: true,\r\n            centerMode: true,\r\n        }\r\n    }, ]\r\n});\r\n\r\n// document.addEventListener(\"DOMContentLoaded\", function () {\r\n//     document.querySelectorAll('.back-image').forEach(block => {\r\n//         let {\r\n//             bg: bgImage,\r\n//             bgMob: mobImage\r\n//         } = block.dataset;\r\n//         let url = `url(${window.innerWidth <= 760 ? mobImage : bgImage})`;\r\n//         block.style.backgroundImage = url;\r\n//     });\r\n\r\n//     let blocks = document.querySelectorAll('.scroll.sanimate');\r\n//     let clientsSlides = document.querySelectorAll('.clients-slider > .slide.sanimate');\r\n\r\n//     clientsSlides.forEach((slide, index) => {\r\n//         slide.style.animationDelay = `${index * 170}ms`;\r\n//     });\r\n\r\n//     let observerCallback = (entries, observer) => {\r\n//         entries.forEach(entry => {\r\n//             if (entry.isIntersecting) {\r\n//                 entry.target.classList.add('fadeInUp');\r\n//                 observer.unobserve(entry.target);\r\n//             }\r\n//         });\r\n//     };\r\n\r\n//     blocks.forEach(block => {\r\n//         new IntersectionObserver(observerCallback, {\r\n//             threshold: 0.2\r\n//         }).observe(block);\r\n//     });\r\n\r\n//     clientsSlides.forEach(block => {\r\n//         new IntersectionObserver(observerCallback, {\r\n//             threshold: 0.4\r\n//         }).observe(block);\r\n//     });\r\n// });"],"file":"main.js"}