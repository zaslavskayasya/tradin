{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["let mainSliderJQ = $('.main-slider');\r\nlet mainSlider = document.querySelector('.main-slider');\r\n\r\nmainSliderJQ.slick({\r\n    dots: true,\r\n    arrows: true,\r\n    infinite: true,\r\n    slidesToShow: 1,\r\n    fade: true,\r\n    cssEase: 'linear'\r\n});\r\n\r\nlet logo = document.querySelector('.logo');\r\nlet mainSliderSlick = mainSliderJQ.slick('getSlick');\r\nlet mainFirstSlide = mainSliderSlick?.$slides[0];\r\n\r\nlet mainArrows = document.querySelectorAll('.slick-arrow');\r\nlet mainDots = mainSlider.querySelector('.slick-dots');\r\nlet mainText = mainSlider.querySelector('.slick-active')\r\n    ?.querySelector('.texts-block');\r\n\r\nlet mobile = {\r\n    default: {\r\n        dots: '148px',\r\n        arrows: '54px',\r\n    },\r\n};\r\n\r\nlet desktop = {\r\n    default: {\r\n        dots: '250px',\r\n        arrows: '54px',\r\n    },\r\n};\r\n\r\nlet getOffsetLeft = selector => {\r\n    if (!selector)\r\n        return selector\r\n    if (selector.offsetLeft)\r\n        return selector.offsetLeft;\r\n    else if (selector && !selector.offsetLeft)\r\n        return getOffsetLeft(selector?.offsetParent);\r\n};\r\n\r\nlet getOffsetTop = selector => {\r\n    if (!selector)\r\n        return selector    \r\n    if (selector.offsetTop)\r\n        return selector.offsetTop;\r\n    else if (selector && !selector.offsetTop)\r\n        return getOffsetTop(selector?.offsetParent);\r\n};\r\n\r\nlet calculateProperty = (currentProperty, newProperty) => {\r\n    if (typeof newProperty == 'string'){\r\n        currentValue = parseFloat(currentProperty);\r\n        newValue = parseFloat(newProperty.slice(2, -2));\r\n\r\n        if (['auto', 'none', 'inherit'].includes(newProperty) || /%$/g.test(newProperty)){\r\n            return newProperty;\r\n        } else if (currentValue && newProperty.startsWith('+=')){\r\n            return `${currentValue - newValue}px`;\r\n        } else if (currentValue && newProperty.startsWith('-=')){\r\n            return `${currentValue - newValue}px`;\r\n        }\r\n\r\n        let result = parseFloat(newProperty) || 0;\r\n        return `${result}px`;\r\n    }\r\n};\r\n\r\nlet setCSS = (element, properties) => {\r\n    for (let property in properties){\r\n        currentStyleValue = getComputedStyle(element)[property];\r\n        element.style[property] = `${calculateProperty(currentStyleValue, properties[property])}`;\r\n    }\r\n};\r\n\r\nfunction protoCSS(properties){\r\n    Array.from(this).forEach(el => setCSS(el, properties));\r\n}\r\nfunction customCSS(properties){\r\n    setCSS(this, properties);\r\n}\r\nNodeList.prototype.css = protoCSS;\r\nHTMLUListElement.prototype.css = customCSS;\r\n\r\nsetTimeout(() => {\r\n    mainSlider.querySelectorAll('.texts-block').forEach(el => el.classList.remove('hide'));\r\n    mainArrows.forEach(arrow => {\r\n        arrow.style.opacity = 1;\r\n        arrow.classList.add('animate__animated', 'animate__fadeInUp');\r\n    });\r\n    mainDots.style.opacity = 1;\r\n    mainDots.classList.add('animate__animated', 'animate__fadeInUp');\r\n    mainFirstSlide.querySelectorAll('.animate__animated')?.forEach(\r\n        el => el.classList.add('animate__fadeInUp')\r\n    );\r\n}, 900);\r\n\r\n// function resize(){\r\n//     mainArrows = document.querySelectorAll('.slick-arrow');\r\n//     mainDots = mainSlider.querySelector('.slick-dots');\r\n//     mainText = mainSlider.querySelector('.slick-active')\r\n//         ?.querySelector('.texts-block');\r\n\r\n//     // Инициализация стрелок и точек после загрузки.\r\n//     if (window.innerWidth < 760){\r\n//         mainDots.style.cssText = '';\r\n//         mainDots.css({\r\n//             top: 'auto',\r\n//             left: `-=${getOffsetLeft(mainText)-(mainText.querySelector('.button').innerWidth/2)}px`,\r\n//             bottom: mobile.default.dots,\r\n//         });\r\n\r\n//         mainArrows.forEach(el => el.style.cssText = '');\r\n//         mainArrows.css({\r\n//             top: 'auto',\r\n//             left: `-=${getOffsetLeft(mainText)-(mainText.querySelector('.button').innerWidth/2)}px`,\r\n//             bottom: mobile.default.arrows\r\n//         });\r\n\r\n//     } else if (window.innerWidth >= 1020){\r\n//         let offsetTextArrows = 10;\r\n//         let offsetTextDots = 250;\r\n        \r\n//         mainDots.css({\r\n//             top: 'auto',\r\n//             bottom: desktop.default.dots,\r\n//             right: `${offsetTextDots}px`,\r\n//             left: 'none'\r\n//         });\r\n    \r\n//         mainArrows.css({\r\n//             top: `${getOffsetTop(mainText.querySelector('.h1')) + offsetTextArrows}px`,\r\n//             left: `-=${getOffsetLeft(mainArrows[0])-getOffsetLeft(logo)}px`,\r\n//             bottom: 'none',\r\n//         });\r\n//     } else {\r\n//         let offsetTextArrows = 0;\r\n//         let offsetTopArrows = 10;\r\n//         let offsetTextDots = 610;\r\n        \r\n//         mainDots.css({\r\n//             top: 'auto',\r\n//             bottom: desktop.default.dots,\r\n//             left: `-=${getOffsetLeft(mainDots)-getOffsetLeft(mainText)-offsetTextDots}px`\r\n//         });\r\n    \r\n//         mainArrows.css({\r\n//             top: 'auto',\r\n//             bottom: `${120+offsetTopArrows}px`,\r\n//             left: `-=${getOffsetLeft(mainArrows[0])-getOffsetLeft(mainText)-offsetTextArrows}px`,\r\n//         });\r\n//     }\r\n// }\r\n// resize();\r\n// window.addEventListener('resize', resize);\r\n\r\n// Выполнение перед изменением слайда.\r\nmainSliderJQ.on('beforeChange', (slick, current, next) => {\r\n    let animateName = 'animate__fadeInUp';\r\n    let currentSlide = current.$slides[next];\r\n    let currentSelectors = currentSlide.querySelectorAll('.animate__animated');\r\n    currentSelectors.forEach(el => el.classList.remove(animateName));\r\n});\r\n\r\nmainSliderJQ.on('swipe', (event, slick, direction) => {\r\n    let animateName = 'animate__fadeInUp';\r\n    let currentSlideIdx = slick.currentSlide;\r\n    let currentSlide = slick.$slides[currentSlideIdx];\r\n    let currentSelectors = currentSlide.querySelectorAll('.animate__animated');\r\n    currentSelectors.forEach(el => el.classList.add(animateName));\r\n});\r\n\r\nmainDots.querySelectorAll('li').forEach(dot => {\r\n    dot.addEventListener('click', () => {\r\n        let animateName = 'animate__fadeInUp';\r\n        let currentSlideIdx = mainSliderSlick.currentSlide;\r\n        let currentSlide = mainSliderSlick.$slides[currentSlideIdx];\r\n        let currentSelectors = currentSlide.querySelectorAll('.animate__animated');\r\n        currentSelectors.forEach(el => el.classList.add(animateName));\r\n    });\r\n});\r\n\r\nmainArrows.forEach(\r\n    arrow => arrow.addEventListener('click', () => {\r\n        let animateName = 'animate__fadeInUp';\r\n        let slick = mainSliderJQ.slick('getSlick');\r\n        let currentSlide = slick.$slides[slick.currentSlide];\r\n        let currentSelectors = currentSlide.querySelectorAll('.animate__animated');\r\n        currentSelectors.forEach(el => el.classList.add(animateName));\r\n    })\r\n);\r\n\r\n// $('.selector').slick({\r\n//     nextArrow: '<i class=\"fa fa-arrow-right\"></i>',\r\n//     prevArrow: '<i class=\"fa fa-arrow-left\"></i>',\r\n//   // add the rest of your options here\r\n//   });\r\n\r\n\r\n\r\n$('.clients-slider').slick({\r\n    dots: true,\r\n    infinite: false,\r\n    speed: 300,\r\n    slidesToShow: 2,\r\n    slidesToScroll: 2,\r\n    mobileFirst: true,\r\n\r\n    responsive: [\r\n        {\r\n            breakpoint: 560,\r\n            settings: {\r\n                slidesToShow: 3,\r\n                slidesToScroll: 2,\r\n                dots: true,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 760,\r\n            settings: {\r\n                slidesToShow: 4,\r\n                slidesToScroll: 2,\r\n                dots: true,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1280, // Устанавливаем большое значение, чтобы \"unslick\" не срабатывал случайно\r\n            settings: \"unslick\" // Отключение слайдера при больших экранах\r\n        }\r\n    ]\r\n});\r\n\r\n$('.news-slider').slick({\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 300,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    mobileFirst: true,\r\n    adaptiveHeight: true,\r\n    arrows: true,\r\n    responsive: [\r\n        {\r\n            breakpoint: 760,\r\n            settings: {\r\n                slidesToShow: 2,\r\n                slidesToScroll: 1,\r\n                dots: true,\r\n                centerMode: true,\r\n            }\r\n        },\r\n       \r\n    ]\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n    document.querySelectorAll('.back-image').forEach(block => {\r\n    let {\r\n        bg: bgImage,\r\n        bgMob: mobImage\r\n    }  = block.dataset;\r\n    let url = `url(${window.innerWidth <= 760 ? mobImage : bgImage})`;\r\n    block.style.backgroundImage = url;\r\n    });\r\n  });\r\n\r\n\r\n//   document.addEventListener('DOMContentLoaded', function () {\r\n//     function updateOffsets() {\r\n//         const textsBlock = document.querySelector('.texts-block');\r\n//         const slickDots = document.querySelector('.slick-dots');\r\n//         const slickPrev = document.querySelector('.main-slider .slick-prev');\r\n//         const slickNext = document.querySelector('.main-slider .slick-next');\r\n\r\n//         if (!textsBlock || !slickDots || !slickPrev || !slickNext) return;\r\n\r\n//         const textsBlockOffset = textsBlock.getBoundingClientRect().left;\r\n\r\n//         slickDots.style.left = `${textsBlockOffset}px`;\r\n\r\n//         const screenWidth = window.innerWidth;\r\n\r\n//         if (screenWidth >= 760 && screenWidth <= 1200) {\r\n//             slickPrev.style.left = `${textsBlockOffset}px`;\r\n//             slickNext.style.left = `${textsBlockOffset + 45}px`;\r\n//         } else if (screenWidth > 1200) {\r\n//             slickPrev.style.left = 'initial';\r\n//             slickNext.style.left = `${textsBlockOffset + 45}px`;\r\n//         } else {\r\n//             slickPrev.style.left = 'initial';\r\n//             slickNext.style.left = 'initial';\r\n//         }\r\n//     }\r\n\r\n//     window.addEventListener('resize', updateOffsets);\r\n//     updateOffsets();\r\n// });"],"file":"main.js"}