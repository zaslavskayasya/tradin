{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["let mainSliderJQ = $('.main-slider');\nlet mainSlider = document.querySelector('.main-slider');\n\nmainSliderJQ.slick({\n    dots: true,\n    arrows: true,\n    infinite: true,\n    slidesToShow: 1,\n    fade: true,\n    cssEase: 'linear'\n});\n\nlet logo = document.querySelector('.logo');\nlet mainSliderSlick = mainSliderJQ.slick('getSlick');\nlet mainFirstSlide = mainSliderSlick?.$slides[0];\n\nlet mainArrows = document.querySelectorAll('.slick-arrow');\nlet mainDots = mainSlider.querySelector('.slick-dots');\nlet mainText = mainSlider.querySelector('.slick-active')\n    ?.querySelector('.texts-block');\n\nlet mobile = {\n    default: {\n        dots: '161px',\n        arrows: '54px',\n    },\n    switch: {\n        ...this.default\n    },\n    resize: {\n        ...this.default\n    },\n};\n\nlet desktop = {\n    default: {\n        dots: '80px',\n        arrows: '54px',\n    },\n    switch: {\n        ...this.default\n    },\n    resize: {\n        ...this.default\n    },\n};\n\nlet getOffsetLeft = selector => {\n    if (!selector)\n        return selector\n\n    if (selector.offsetLeft)\n        return selector.offsetLeft;\n    else if (selector && !selector.offsetLeft)\n        return getOffsetLeft(selector?.offsetParent);\n};\n\nlet getOffsetTop = selector => {\n    if (!selector)\n        return selector\n    \n    if (selector.offsetTop)\n        return selector.offsetTop;\n    else if (selector && !selector.offsetTop)\n        return getOffsetTop(selector?.offsetParent);\n};\n\nlet calculateProperty = (currentProperty, newProperty) => {\n    if (typeof newProperty == 'string'){\n        currentValue = parseFloat(currentProperty);\n        newValue = parseFloat(newProperty.slice(2, -2));\n\n        if (['auto', 'none', 'inherit'].includes(newProperty) || /%$/g.test(newProperty)){\n            return newProperty;\n        } else if (currentValue && newProperty.startsWith('+=')){\n            return `${currentValue - newValue}px`;\n        } else if (currentValue && newProperty.startsWith('-=')){\n            return `${currentValue - newValue}px`;\n        }\n\n        let result = parseFloat(newProperty) || 0;\n        return `${result}px`;\n    }\n};\n\nlet setCSS = (element, properties) => {\n    for (let property in properties){\n        currentStyleValue = getComputedStyle(element)[property];\n        element.style[property] = `${calculateProperty(currentStyleValue, properties[property])}`;\n    }\n};\n\nfunction protoCSS(properties){\n    Array.from(this).forEach(el => setCSS(el, properties));\n}\nfunction customCSS(properties){\n    setCSS(this, properties);\n}\nNodeList.prototype.css = protoCSS;\nHTMLUListElement.prototype.css = customCSS;\n\nmainFirstSlide.querySelectorAll('.animate__animated')?.forEach(\n    el => el.classList.add('animate__fadeInUp')\n);\nfunction resize(){\n    mainArrows = document.querySelectorAll('.slick-arrow');\n    mainDots = mainSlider.querySelector('.slick-dots');\n    mainText = mainSlider.querySelector('.slick-active')\n        ?.querySelector('.texts-block');\n\n    // Инициализация стрелок и точек после загрузки.\n    if (window.innerWidth < 760){\n        mainDots.style.cssText = '';\n        mainDots.css({\n            top: 'auto',\n            left: `-=${getOffsetLeft(mainText)-(mainText.querySelector('.button').innerWidth/2)}px`,\n            bottom: mobile.default.dots,\n        });\n\n        mainArrows.forEach(el => el.style.cssText = '');\n        mainArrows.css({\n            top: 'auto',\n            left: `-=${getOffsetLeft(mainText)-(mainText.querySelector('.button').innerWidth/2)}px`,\n            bottom: mobile.default.arrows\n        });\n\n    } else if (window.innerWidth >= 1280){\n        let offsetTextArrows = 10;\n        let offsetTextDots = 21;\n        \n        mainDots.css({\n            top: 'auto',\n            bottom: desktop.default.dots,\n            left: `-=${getOffsetLeft(mainDots)-getOffsetLeft(mainText)-offsetTextDots}px`\n        });\n    \n        mainArrows.css({\n            top: `${getOffsetTop(mainText.querySelector('.h1')) + offsetTextArrows}px`,\n            left: `-=${getOffsetLeft(mainArrows[0])-getOffsetLeft(logo)}px`,\n            bottom: 'none',\n        });\n    } else {\n        let offsetTextArrows = 0;\n        let offsetTopArrows = 10;\n        let offsetTextDots = 21;\n        \n        mainDots.css({\n            top: 'auto',\n            bottom: desktop.default.dots,\n            left: `-=${getOffsetLeft(mainDots)-getOffsetLeft(mainText)-offsetTextDots}px`\n        });\n    \n        mainArrows.css({\n            top: 'auto',\n            bottom: `${120+offsetTopArrows}px`,\n            left: `-=${getOffsetLeft(mainArrows[0])-getOffsetLeft(mainText)-offsetTextArrows}px`,\n        });\n    }\n}\nresize();\nwindow.addEventListener('resize', resize);\n\n// Выполнение перед изменением слайда.\nmainSliderJQ.on('beforeChange', (slick, current, next) => {\n    let animateName = 'animate__fadeInUp';\n    let currentSlide = current.$slides[next];\n    let currentSelectors = currentSlide.querySelectorAll('.animate__animated');\n    currentSelectors.forEach(el => el.classList.remove(animateName));\n});\n\nmainArrows.forEach(\n    arrow => arrow.addEventListener('click', event => {\n        let animateName = 'animate__fadeInUp';\n        let slick = mainSliderJQ.slick('getSlick');\n        let currentSlide = slick.$slides[slick.currentSlide];\n        let currentSelectors = currentSlide.querySelectorAll('.animate__animated');\n        currentSelectors.forEach(el => el.classList.add(animateName));\n    })\n);\n\n// $('.selector').slick({\n//     nextArrow: '<i class=\"fa fa-arrow-right\"></i>',\n//     prevArrow: '<i class=\"fa fa-arrow-left\"></i>',\n//   // add the rest of your options here\n//   });\n\n\n\n$('.clients-slider').slick({\n    dots: true,\n    infinite: false,\n    speed: 300,\n    slidesToShow: 2,\n    slidesToScroll: 2,\n    mobileFirst: true,\n\n    responsive: [\n        {\n            breakpoint: 560,\n            settings: {\n                slidesToShow: 3,\n                slidesToScroll: 2,\n                dots: true,\n            }\n        },\n        {\n            breakpoint: 760,\n            settings: {\n                slidesToShow: 4,\n                slidesToScroll: 2,\n                dots: true,\n            }\n        },\n        {\n            breakpoint: 1280, // Устанавливаем большое значение, чтобы \"unslick\" не срабатывал случайно\n            settings: \"unslick\" // Отключение слайдера при больших экранах\n        }\n    ]\n});\n\n$('.news-slider').slick({\n    dots: true,\n    infinite: true,\n    speed: 300,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    mobileFirst: true,\n    adaptiveHeight: true,\n    arrows: true,\n    responsive: [\n        {\n            breakpoint: 760,\n            settings: {\n                slidesToShow: 2,\n                slidesToScroll: 1,\n                dots: true,\n                centerMode: true,\n            }\n        },\n       \n    ]\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const blocks = document.querySelectorAll('.back-image');\n    \n    blocks.forEach(block => {\n      const bgImage = block.getAttribute('data-bg');\n      const mobImage = block.getAttribute('data-bg-mob');\n\n      block.style.backgroundImage = `url(${bgImage})`;\n      if(window.innerWidth <= 760){\n        block.style.backgroundImage = `url(${mobImage})`;\n      }\n\n    });\n  });\n\n\n//   document.addEventListener('DOMContentLoaded', function () {\n//     function updateOffsets() {\n//         const textsBlock = document.querySelector('.texts-block');\n//         const slickDots = document.querySelector('.slick-dots');\n//         const slickPrev = document.querySelector('.main-slider .slick-prev');\n//         const slickNext = document.querySelector('.main-slider .slick-next');\n\n//         if (!textsBlock || !slickDots || !slickPrev || !slickNext) return;\n\n//         const textsBlockOffset = textsBlock.getBoundingClientRect().left;\n\n//         slickDots.style.left = `${textsBlockOffset}px`;\n\n//         const screenWidth = window.innerWidth;\n\n//         if (screenWidth >= 760 && screenWidth <= 1200) {\n//             slickPrev.style.left = `${textsBlockOffset}px`;\n//             slickNext.style.left = `${textsBlockOffset + 45}px`;\n//         } else if (screenWidth > 1200) {\n//             slickPrev.style.left = 'initial';\n//             slickNext.style.left = `${textsBlockOffset + 45}px`;\n//         } else {\n//             slickPrev.style.left = 'initial';\n//             slickNext.style.left = 'initial';\n//         }\n//     }\n\n//     window.addEventListener('resize', updateOffsets);\n//     updateOffsets();\n// });"],"file":"main.js"}